import type { OpCode } from "../types/bytecode";

class BytecodeManager {
    // The output buffer for generated bytecode.
    private buffer: number[] = [];

    /**
     * Emits a single byte (opcode or operand) to the buffer.
     */
    emitByte(byte: number): void {
        this.buffer.push(byte & 0xFF);
    }

    /**
     * Emits multiple bytes (e.g., for multi-byte operands).
     */
    emitBytes(...bytes: number[]): void {
        for (const b of bytes) {
            this.emitByte(b);
        }
    }

    /**
     * Returns the generated bytecode as a Uint8Array.
     */
    getBytecode(): Uint8Array {
        return new Uint8Array(this.buffer);
    }
}